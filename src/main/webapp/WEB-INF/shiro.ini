[main]
authc.loginUrl = /login.xhtml
user.loginUrl = /login.xhtml
roles.loginUrl = /login.xhtml
perms.loginUrl = /login.xhtml

# Create JDBC realm.
jdbcRealm = org.shekinah.service.security.JdbcSaltRealm
datasource = org.apache.shiro.jndi.JndiObjectFactory
datasource.resourceName = java:comp/DefaultDataSource
# if the JNDI name is prefixed with java:comp/env (like a JEE environment),
# uncomment this line:
# datasource.resourceRef = true

jdbcRealm.dataSource = $datasource 

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT password, salt FROM Users WHERE username = ? and status = 'Active'
jdbcRealm.userRolesQuery = SELECT user_role FROM USER_ROLES WHERE user_Id = (SELECT id FROM USERS WHERE username = ?)

# Configure JDBC realm password hashing.
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-512
# Base64 encoding (less text):
# credentialsMatcher.storedCredentialsHexEncoded = false
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.permissionsQuery = SELECT permission FROM ROLE_PERMISSIONS where user_role = ?

jdbcRealm.authorizationCachingEnabled = false

[urls]

# Avoid direct access to include files
/**/*Include.xhtml = perms["none"]

/pages/infos/infos.xhtml = perms["infos:read"]

/pages/hopital/hopital.xhtml = perms["hopital:read"]

/pages/service/service.xhtml = perms["service:read"]

/pages/medicament/medicament.xhtml = perms["medicament:read"]

/pages/famille/famille.xhtml = perms["famille:read"]

/pages/fournisseur/fournisseur.xhtml = perms["fournisseur:read"]

/pages/vente/vente.xhtml = perms["vente:read"]

/pages/patient/patient.xhtml = perms["patient:read"]

/pages/creneau/creneau.xhtml = perms["creneau:read"]

/pages/rendezvous/rendezvous.xhtml = perms["rendezvous:read"]

/pages/consultation/consultation.xhtml = perms["consultation:read"]

/pages/examen/examen.xhtml = perms["examen:read"]

/pages/labo/labo.xhtml = perms["labo:read"]

/pages/societeAbonnement/societeAbonnement.xhtml = perms["societeAbonnement:read"]

/pages/abonnement/abonnement.xhtml = perms["abonnement:read"]

/pages/salle/salle.xhtml = perms["salle:read"]

/pages/hospitalisation/hospitalisation.xhtml = perms["hospitalisation:read"]

/pages/pavillon/pavillon.xhtml = perms["pavillon:read"]

/pages/ordonnance/ordonnance.xhtml = perms["ordonnance:read"]

# admin pages only for Administrators
/pages/admin/** = roles["Administrator"]

# what anomymous users can do
/login.xhtml = authc
/pages/main.xhtml = anon
/pages/user/activation.xhtml = anon
/pages/userManagement/resetPassword.xhtml = anon

/pages/user/register.xhtml = anon
/pages/userManagement/registerSuccess.xhtml = anon

# all other pages are available for authenticated users, only
/pages/** = authc
